{"version":3,"sources":["assets/pokemonBannerText.png","assets/pokemonBannerText2.png","components/PokeList/PokeList.js","components/PokemonView/PokemonView.js","components/DetailsView/DetailsView.js","components/Header/Header.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","StyledWrapper","styled","div","StyledFilters","section","StyledInfo","StyledList","main","StyledButtonWrapper","StyledInputContainer","PokeList","setSelectedPokemonName","setSelectedPokemonDetails","inputValue","setFilterInputValue","pokemons","setPageNumber","pageNumber","loading","currentPage","setCurrentPage","allPokemons","pokemonsInList","changePage","selectPokemon","pageNumbers","i","Math","ceil","push","type","value","placeholder","onChange","event","target","onClick","filter","item","name","includes","toLowerCase","map","index","key","id","parseInt","length","StyledHeader","h2","StyledContainer","ul","StyledHeaderImg","img","StyledPokemonImg","PokemonView","exp","stats","order","height","sprites","types","weight","src","PokeImg","alt","toUpperCase","front_default","slot","stat","base_stat","DetailsView","selectedPokemon","selectedPokemonDetails","useEffect","pokemon","a","fetch","then","res","json","pokemonDetails","getPokemoneDetails","base_experience","Object","keys","StyledDiv","StyledSmallDiv","left","bgc","Header","banner","style","width","App","useState","setPokemons","setLoading","selectedPokemonName","filterInputValue","results","getPokemons","indexOfLastPokemon","indexOfFirstPokemon","currentPokemons","slice","className","number","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.53cbdc28.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pokemonBannerText.e1b54715.png\";","module.exports = __webpack_public_path__ + \"static/media/pokemonBannerText2.5cc55f8f.png\";","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledWrapper = styled.div`\r\n   width: 100%;\r\n   height: 50%;\r\n   display:flex;\r\n   flex-direction:column;\r\n   align-items:center;\r\n   justify-content:space-evenly;\r\n   span{\r\n      padding:0;\r\n   }\r\n   @media (orientation:landscape) {\r\n   height: 100%;\r\n   \r\n   border-left:1.5px solid black;\r\n   }\r\n`\r\nconst StyledFilters = styled.section`\r\n   width:100%;\r\n   display:flex;\r\n   flex-direction:column;\r\n   align-items:center;\r\n`;\r\nconst StyledInfo = styled.div`\r\n   width:80%;\r\n   display:flex;\r\n   flex-direction:row;\r\n   align-items:center;\r\n   justify-content:center;\r\n   font-size:1rem;\r\n   @media (orientation:landscape) {\r\n   font-size:.75rem;\r\n   margin-top:5px;\r\n   }\r\n   @media screen and (min-height:1020px) and (min-width:750px){\r\n      font-size:1.4rem;\r\n   }\r\n    @media screen and (min-width:1020px){\r\n      font-size:1.2rem;\r\n   }\r\n\r\n`;\r\n\r\nconst StyledList = styled.main`\r\n   width:100%;\r\n   height:65%;\r\n   display:flex;\r\n   justify-content:center;\r\n   \r\n   \r\n   ul{\r\n      width: 70%;\r\n      border:1px solid black;\r\n      overflow-y:scroll;\r\n      overflow-x:hidden;\r\n      display:flex;\r\n      flex-direction:column;\r\n      list-style:none;\r\n      background-color:white;\r\n      \r\n      li{\r\n         width:100%;\r\n         height:20%;\r\n         padding: 5px 0;\r\n         font-size:1.2rem;\r\n         display:flex;\r\n         justify-content:center;\r\n         align-items:center;\r\n         cursor:pointer;\r\n      \r\n         .selected{\r\n            color:white;\r\n            text-shadow: 0px 0p 1px black;\r\n         }\r\n        \r\n      &:nth-child(odd){\r\n         background-color:rgba(200,200,200,0.5);\r\n         }\r\n      }\r\n   }\r\n`;\r\n\r\nconst StyledButtonWrapper = styled.div`\r\n   display:flex;\r\n   flex-direction:column;\r\n   align-items:center;\r\n   justify-content:space-evenly;\r\n   height: 100%;\r\n   width: 5%;\r\n   button{\r\n      font-size:2.5rem;\r\n      font-weight:bold;\r\n      background: none;\r\n      border:none;\r\n      cursor: pointer;\r\n      margin-left:25px;\r\n\r\n   }\r\n\r\n   div{\r\n      width:100%;\r\n      height:50%;\r\n      margin-left:25px;\r\n      display:flex;\r\n      flex-direction:column;\r\n      justify-content:center;\r\n      align-items:center;\r\n      button{\r\n         font-size:1.5rem;\r\n         margin:0;\r\n      }\r\n      input{\r\n         width:100%;\r\n         min-width:35px;\r\n         height:30%;\r\n         border:1.5px solid black;\r\n         text-align:center;\r\n         \r\n      }\r\n      input[type=number],\r\n      input[type=number]::-webkit-inner-spin-button, \r\n      input[type=number]::-webkit-outer-spin-button { \r\n      -webkit-appearance: none;       \r\n      -moz-appearance: textfield;\r\n      margin: 0; \r\n      }\r\n   }\r\n`\r\n\r\nconst StyledInputContainer = styled.div`\r\n   display:flex;\r\n   justify-content:center;\r\n   align-items:center;\r\n   width:75%;\r\n   button{\r\n      cursor:pointer;\r\n      height:25px;\r\n      padding:2px;\r\n      background:none;\r\n      background-color:White;\r\n      border:1px solid black;\r\n   }\r\n   input{\r\n      height: 25px;\r\n      width:90%;\r\n      border:1px solid black;\r\n      font-size:.8rem;\r\n      padding:2.5px;\r\n      \r\n      @media (orientation:landscape){\r\n         font-size:.55rem;\r\n      }\r\n      @media screen and (min-height:1020px) and (min-width:750px){\r\n      font-size:1rem;\r\n   }\r\n      @media screen and (min-width:1020px){\r\n      font-size:1rem;\r\n   }\r\n   }\r\n`;\r\n\r\nconst PokeList = ({ setSelectedPokemonName, setSelectedPokemonDetails, inputValue, setFilterInputValue, pokemons, setPageNumber, pageNumber, loading, currentPage, setCurrentPage, allPokemons, pokemonsInList, changePage, selectPokemon }) => {\r\n   const pageNumbers = [];\r\n   for (let i = 1; i <= Math.ceil(allPokemons / pokemonsInList); i++) {\r\n\r\n      pageNumbers.push(i)\r\n   }\r\n   if (loading) {\r\n      return <h2>Loading...</h2>\r\n   }\r\n\r\n   return (\r\n      <StyledWrapper>\r\n         <StyledFilters>\r\n            <StyledInputContainer>\r\n               <input type=\"text\" value={inputValue} placeholder='Use it to filter pokemons!' onChange={(event) => setFilterInputValue(event.target.value)} />\r\n               <button onClick={() => {\r\n                  setSelectedPokemonDetails({})\r\n                  setSelectedPokemonName(null)\r\n                  setFilterInputValue('')\r\n               }}>Reset</button>\r\n            </StyledInputContainer>\r\n            <StyledInfo>\r\n               <span>Choose one for more details!</span>\r\n            </StyledInfo>\r\n\r\n         </StyledFilters>\r\n         <StyledList>\r\n            <ul >\r\n               {pokemons.filter(item => item.name.includes(inputValue.toLowerCase())).map((item, index) => <li\r\n                  onClick={() => selectPokemon(item)}\r\n                  key={index}\r\n                  id={item.name}>{item.name}</li>)}\r\n            </ul>\r\n            <StyledButtonWrapper>\r\n               <button onClick={() => currentPage > 1 ? changePage(parseInt(currentPage) - 1) : null}>&uarr;</button>\r\n\r\n               <div>\r\n                  <input type=\"number\" value={pageNumber} onChange={(event) => setPageNumber(event.target.value)} />\r\n                  <button onClick={() => setCurrentPage(pageNumber)}>✔</button>\r\n               </div>\r\n\r\n               <button onClick={() => currentPage <= 162 ? changePage(parseInt(currentPage) + 1) : null}>&darr;</button>\r\n            </StyledButtonWrapper>\r\n         </StyledList>\r\n         {inputValue === '' ? <span>{`Page ${currentPage} of ${pageNumbers.length}`}</span> : null}\r\n      </StyledWrapper>\r\n   )\r\n};\r\n\r\nexport default PokeList;","import React from 'react'\r\nimport styled from 'styled-components';\r\nimport PokeImg from '../../assets/pokemonBannerText.png'\r\nconst StyledWrapper = styled.main`\r\n   display:flex;\r\n   flex-direction:column;\r\n   justify-content:center;\r\n   align-items:center;\r\n   width:100%;\r\n   height:100%;\r\n`;\r\nconst StyledHeader = styled.h2`\r\n   display:flex;\r\n   flex-direction:column;\r\n   justify-content:center;\r\n   align-items:center;\r\n   font-size:1rem;\r\n   font-weight:700;\r\n   @media screen and (min-width:750px){\r\n    font-size:1.4rem;  \r\n   }\r\n   @media screen and (min-height:1020px) and (min-width:750px){\r\n      font-size:1.6rem;\r\n   }\r\n`;\r\nconst StyledContainer = styled.section`\r\n   display:flex;\r\n   justify-content:center;\r\n   width:100%;\r\n   height:60%;\r\n   @media (orientation:landscape){\r\n      padding: 0 2.5px;\r\n   }\r\n`;\r\n\r\nconst StyledList = styled.ul`\r\n   flex-basis:31%;\r\n   font-size:.75rem;\r\n   list-style:none;\r\n   span{\r\n      font-size:1rem;\r\n      font-weight:700;\r\n      @media screen and (min-height:1020px) and (min-width:750px){\r\n      font-size:1.2rem\r\n   }\r\n      @media screen and (min-width:1020px){\r\n      font-size:1.4rem;\r\n   }\r\n   }\r\n   @media screen and (min-height:1020px) and (min-width:750px){\r\n      font-size:1rem;\r\n   }\r\n   @media screen and (min-width:1020px){\r\n      font-size:1.2rem;\r\n   }\r\n\r\n`;\r\nconst StyledHeaderImg = styled.img`\r\n   width:30%;\r\n   margin-top:5px;\r\n   @media screen and (min-height:1020px) and (min-width:750px){\r\n      width:40%;\r\n   }\r\n   @media screen and (min-width:1020px){\r\n      width:40%;\r\n   }\r\n`;\r\nconst StyledPokemonImg = styled.img`\r\n   @media screen and (min-height:1020px) and (min-width:750px){\r\n      width:30%;\r\n   }\r\n   @media screen and (min-width:1020px){\r\n      width:30%;\r\n   }\r\n`;\r\nconst PokemonView = ({ exp, stats, name, order, height, sprites, types, weight }) => {\r\n   return (\r\n      <StyledWrapper>\r\n         <StyledHeaderImg src={PokeImg} alt=\"\" />\r\n         <StyledHeader>{order}. {name.toUpperCase()}</StyledHeader>\r\n         <StyledPokemonImg src={sprites.front_default} alt=\"\" />\r\n         <StyledContainer>\r\n            <StyledList>\r\n               <span>Stats:</span>\r\n               {stats.filter(slot => !slot.stat.name.includes('special')).map(slot => <li key={slot.stat.name}>- {slot.stat.name}:  <b>{slot.base_stat}</b></li>)}\r\n            </StyledList>\r\n\r\n            <StyledList>\r\n               <span>Types:</span>\r\n               {types.map(slot => <li key={slot.type.name}>- {slot.type.name}</li>)}\r\n            </StyledList>\r\n\r\n            <StyledList>\r\n               <span>Attributes:</span>\r\n               <li>- Height:  <b>{height}</b></li>\r\n               <li>- Weight:  <b>{weight}</b></li>\r\n               <li>- Experience:  <b>{exp}</b></li>\r\n            </StyledList>\r\n         </StyledContainer>\r\n\r\n      </StyledWrapper>\r\n   )\r\n}\r\n\r\nexport default PokemonView\r\n","import React, { useEffect } from 'react'\r\nimport styled from 'styled-components';\r\nimport PokemonView from '../PokemonView/PokemonView';\r\n\r\nconst StyledWrapper = styled.div`\r\n   background-color:white;\r\n   width:100%;\r\n   height:50%;\r\n   display:flex;\r\n   flex-direction:column;\r\n   align-items:center;\r\n   justify-content:center;\r\n   border-top:10px solid red;\r\n   border-bottom:2px solid red;\r\n   border-left:20px solid red;\r\n   border-right:20px solid red;\r\n   box-shadow:inset 0 0 0px 1px black;\r\n   @media (orientation:landscape) {\r\n   height: 95%;\r\n   }\r\n`\r\nconst DetailsView = ({ selectedPokemon, selectedPokemonDetails, setSelectedPokemonDetails }) => {\r\n\r\n   useEffect(() => {\r\n\r\n      const getPokemoneDetails = async (pokemon) => {\r\n         await fetch(`https://pokeapi.co/api/v2/pokemon/${pokemon}`)\r\n            .then(res => res.json())\r\n            .then(pokemonDetails => {\r\n\r\n               return setSelectedPokemonDetails(pokemonDetails)\r\n            })\r\n\r\n\r\n\r\n\r\n      }\r\n      getPokemoneDetails(selectedPokemon)\r\n   }, [selectedPokemon, setSelectedPokemonDetails])\r\n\r\n   const { base_experience, stats, name, order, height, sprites, types, weight } = selectedPokemonDetails;\r\n\r\n   return (\r\n      <StyledWrapper>\r\n         {Object.keys(selectedPokemonDetails).length > 0 ? <PokemonView\r\n            order={order}\r\n            stats={stats}\r\n            name={name}\r\n            height={height}\r\n            sprites={sprites}\r\n            types={types}\r\n            exp={base_experience}\r\n            weight={weight} /> : null}\r\n      </StyledWrapper>\r\n   )\r\n};\r\n\r\nexport default DetailsView;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport banner from '../../assets/pokemonBannerText2.png';\r\n\r\nconst StyledWrapper = styled.div`\r\n   width: 100%;\r\n   height: 50%;\r\n   display:flex;\r\n   justify-content:center;\r\n   align-items:center;\r\n   position:relative;\r\n   @media (orientation:landscape) {\r\n   height: 100%;\r\n   }\r\n`;\r\nconst StyledContainer = styled.div`\r\n   width: 50%;\r\n   max-width:200px;\r\n   height:20%;\r\n   position:absolute;\r\n   top:2%;\r\n   left:4%;\r\n`;\r\nconst StyledDiv = styled.div`\r\n   height:3rem;\r\n   width:3rem;\r\n   background-color:hsl(220,60%,30%);\r\n   border-radius:50%;\r\n   border:1.5px solid black;\r\n   box-shadow:inset 0 0 0 5px hsl(200,20%,95%);\r\n   position: absolute;\r\n   top:5%;\r\n   left:5%;\r\n   ::before{\r\n      content:'';\r\n      position:absolute;\r\n      width:.7rem;\r\n      height:.7rem;\r\n      background-color:rgba(250,250,250,0.75);\r\n      border-radius:50%;\r\n      top:25%;\r\n      left:25%;\r\n   }\r\n   ::after{\r\n      content:'';\r\n      position:absolute;\r\n      width:1.6rem;\r\n      height:1.6rem;\r\n      background-color:rgba(250,250,250,0.15);\r\n      border-radius:50%;\r\n      bottom:30%;\r\n      right:30%;\r\n   }     \r\n`;\r\nconst StyledSmallDiv = styled.div`\r\n   height:1rem;\r\n   width:1rem;   \r\n   border-radius:50%;\r\n   border:1.5px solid black;\r\n   position: absolute;\r\n   top:5%;\r\n   ::before{\r\n      content:'';\r\n      position:absolute;\r\n      width:.3rem;\r\n      height:.3rem;\r\n      background-color:rgba(250,250,250,0.55);\r\n      border-radius:50%;\r\n      top:10%;\r\n      left:15%;\r\n   }\r\n   left: ${({ left }) => left};\r\n   background-color:${({ bgc }) => bgc};\r\n`;\r\n\r\nconst Header = () => {\r\n   return (\r\n\r\n      <StyledWrapper>\r\n         <img src={banner} alt=\"Pokemons Header\" style={{ width: '90%' }} />\r\n         <StyledContainer>\r\n            <StyledDiv />\r\n            <StyledSmallDiv left='40%' bgc='hsl(0,100%,45%)' />\r\n            <StyledSmallDiv left='55%' bgc='hsl(45,90%,60%)' />\r\n            <StyledSmallDiv left='70%' bgc='hsl(125,50%,60%)' />\r\n\r\n         </StyledContainer>\r\n      </StyledWrapper>\r\n\r\n   )\r\n}\r\n\r\nexport default Header\r\n","import React, { useState, useEffect } from 'react';\nimport PokeList from './components/PokeList/PokeList';\nimport DetailsView from './components/DetailsView/DetailsView';\nimport './App.css';\nimport Header from './components/Header/Header';\nconst App = () => {\n  const [pokemons, setPokemons] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pokemonsInList] = useState(5);\n  const [selectedPokemonName, setSelectedPokemonName] = useState(null);\n  const [selectedPokemonDetails, setSelectedPokemonDetails] = useState({});\n  const [filterInputValue, setFilterInputValue] = useState('');\n  const [pageNumber, setPageNumber] = useState(1)\n\n  useEffect(() => {\n    const getPokemons = async () => {\n      setLoading(true);\n      await fetch(`https://pokeapi.co/api/v2/pokemon/?offset=0&limit=807`)\n        .then(res => res.json())\n        .then(pokemon => setPokemons(pokemon.results));\n      setLoading(false);\n    }\n    getPokemons()\n  }, [])\n\n  //\n  const indexOfLastPokemon = currentPage * pokemonsInList;\n  const indexOfFirstPokemon = indexOfLastPokemon - pokemonsInList;\n  const currentPokemons = pokemons.slice(indexOfFirstPokemon, indexOfLastPokemon);\n\n  const changePage = (number) => setCurrentPage(number);\n  const selectPokemon = (item) => setSelectedPokemonName(item.name);\n\n  return (\n    <div className=\"App\">\n      {selectedPokemonName ?\n        <DetailsView selectedPokemon={selectedPokemonName} selectedPokemonDetails={selectedPokemonDetails} setSelectedPokemonDetails={setSelectedPokemonDetails} /> :\n        <Header />\n      }\n      <PokeList pokemons={filterInputValue === '' ? currentPokemons : pokemons} loading={loading} currentPage={currentPage} setCurrentPage={setCurrentPage} allPokemons={pokemons.length} pokemonsInList={pokemonsInList} changePage={changePage} selectPokemon={selectPokemon}\n        setPokemons={setPokemons}\n        inputValue={filterInputValue}\n        setFilterInputValue={setFilterInputValue}\n        setPageNumber={setPageNumber}\n        pageNumber={pageNumber}\n        setSelectedPokemonDetails={setSelectedPokemonDetails}\n        setSelectedPokemonName={setSelectedPokemonName} />\n\n    </div>\n  );\n\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}